// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`matches the snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <App />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <header
          className="header"
        >
          <h1
            className="app-title"
          >
            SWAPI Box
          </h1>
          <Nav
            favorites={Array []}
            showPeople={[Function]}
            showPlanet={[Function]}
            showVehicle={[Function]}
            toggleCategoryState={[Function]}
          />
        </header>,
        false,
        false,
        false,
        <Sidebar
          films={Object {}}
        />,
      ],
      "className": "App",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <h1
              className="app-title"
            >
              SWAPI Box
            </h1>,
            <Nav
              favorites={Array []}
              showPeople={[Function]}
              showPlanet={[Function]}
              showVehicle={[Function]}
              toggleCategoryState={[Function]}
            />,
          ],
          "className": "header",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "SWAPI Box",
              "className": "app-title",
            },
            "ref": null,
            "rendered": "SWAPI Box",
            "type": "h1",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "favorites": Array [],
              "showPeople": [Function],
              "showPlanet": [Function],
              "showVehicle": [Function],
              "toggleCategoryState": [Function],
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
        ],
        "type": "header",
      },
      false,
      false,
      false,
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "films": Object {},
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <header
            className="header"
          >
            <h1
              className="app-title"
            >
              SWAPI Box
            </h1>
            <Nav
              favorites={Array []}
              showPeople={[Function]}
              showPlanet={[Function]}
              showVehicle={[Function]}
              toggleCategoryState={[Function]}
            />
          </header>,
          false,
          false,
          false,
          <Sidebar
            films={Object {}}
          />,
        ],
        "className": "App",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <h1
                className="app-title"
              >
                SWAPI Box
              </h1>,
              <Nav
                favorites={Array []}
                showPeople={[Function]}
                showPlanet={[Function]}
                showVehicle={[Function]}
                toggleCategoryState={[Function]}
              />,
            ],
            "className": "header",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "SWAPI Box",
                "className": "app-title",
              },
              "ref": null,
              "rendered": "SWAPI Box",
              "type": "h1",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "favorites": Array [],
                "showPeople": [Function],
                "showPlanet": [Function],
                "showVehicle": [Function],
                "toggleCategoryState": [Function],
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
          ],
          "type": "header",
        },
        false,
        false,
        false,
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "films": Object {},
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
