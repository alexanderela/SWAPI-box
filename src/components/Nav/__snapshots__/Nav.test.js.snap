// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Nav matches the snapshot 1`] = `
ReactWrapper {
  Symbol(enzyme.__unrendered__): <Nav
    showPeople={[MockFunction]}
    showPlanet={[MockFunction]}
    showVehicle={[MockFunction]}
    toggleCategoryState={[MockFunction]}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__node__): Object {
    "instance": Nav {
      "_reactInternalFiber": FiberNode {
        "_debugID": 50,
        "_debugIsCurrentlyTiming": false,
        "_debugOwner": FiberNode {
          "_debugID": 49,
          "_debugIsCurrentlyTiming": false,
          "_debugOwner": null,
          "_debugSource": null,
          "actualDuration": 0,
          "actualStartTime": -1,
          "alternate": null,
          "child": [Circular],
          "childExpirationTime": 0,
          "effectTag": 1,
          "expirationTime": 0,
          "firstContextDependency": null,
          "firstEffect": null,
          "index": 0,
          "key": null,
          "lastEffect": null,
          "memoizedProps": Object {
            "Component": [Function],
            "context": null,
            "props": Object {
              "showPeople": [MockFunction],
              "showPlanet": [MockFunction],
              "showVehicle": [MockFunction],
              "toggleCategoryState": [MockFunction],
            },
          },
          "memoizedState": Object {
            "context": null,
            "mount": true,
            "props": Object {
              "showPeople": [MockFunction],
              "showPlanet": [MockFunction],
              "showVehicle": [MockFunction],
              "toggleCategoryState": [MockFunction],
            },
          },
          "mode": 0,
          "nextEffect": null,
          "pendingProps": Object {
            "Component": [Function],
            "context": null,
            "props": Object {
              "showPeople": [MockFunction],
              "showPlanet": [MockFunction],
              "showVehicle": [MockFunction],
              "toggleCategoryState": [MockFunction],
            },
          },
          "ref": null,
          "return": FiberNode {
            "_debugID": 47,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": null,
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": FiberNode {
              "_debugID": 47,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": null,
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": [Circular],
              "child": null,
              "childExpirationTime": 0,
              "effectTag": 0,
              "expirationTime": 1,
              "firstContextDependency": null,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": null,
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": null,
              "ref": null,
              "return": null,
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": Object {
                "containerInfo": <div>
                  <div
                    class="button-container"
                  >
                    <button
                      class="cat-button people-button 
		      	cat-button-inactive"
                      name="people"
                    >
                      People
                    </button>
                    <button
                      class="cat-button planets-button 
		      	cat-button-inactive"
                      name="planets"
                    >
                      Planets
                    </button>
                    <button
                      class="cat-button vehicles-button 
		      	cat-button-inactive"
                      name="vehicles"
                    >
                      Vehicles
                    </button>
                    <div
                      class="FavoriteButton"
                    >
                      <button
                        class="cat-button favorites-button"
                      >
                        Favorites
                        <span
                          class="favorites-count"
                        />
                      </button>
                    </div>
                  </div>
                </div>,
                "context": Object {},
                "current": [Circular],
                "didError": false,
                "earliestPendingTime": 0,
                "earliestSuspendedTime": 0,
                "expirationTime": 0,
                "finishedWork": null,
                "firstBatch": null,
                "hydrate": false,
                "interactionThreadID": 12,
                "latestPendingTime": 0,
                "latestPingedTime": 0,
                "latestSuspendedTime": 0,
                "memoizedInteractions": Set {},
                "nextExpirationTimeToWorkOn": 0,
                "nextScheduledRoot": null,
                "pendingChildren": null,
                "pendingCommitExpirationTime": 0,
                "pendingContext": null,
                "pendingInteractionMap": Map {},
                "timeoutHandle": -1,
              },
              "tag": 5,
              "treeBaseDuration": 0,
              "type": null,
              "updateQueue": Object {
                "baseState": null,
                "firstCapturedEffect": null,
                "firstCapturedUpdate": null,
                "firstEffect": null,
                "firstUpdate": Object {
                  "callback": null,
                  "expirationTime": 1,
                  "next": null,
                  "nextEffect": null,
                  "payload": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={
                        Object {
                          "showPeople": [MockFunction],
                          "showPlanet": [MockFunction],
                          "showVehicle": [MockFunction],
                          "toggleCategoryState": [MockFunction],
                        }
                      }
                    />,
                  },
                  "tag": 0,
                },
                "lastCapturedEffect": null,
                "lastCapturedUpdate": null,
                "lastEffect": null,
                "lastUpdate": Object {
                  "callback": null,
                  "expirationTime": 1,
                  "next": null,
                  "nextEffect": null,
                  "payload": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={
                        Object {
                          "showPeople": [MockFunction],
                          "showPlanet": [MockFunction],
                          "showVehicle": [MockFunction],
                          "toggleCategoryState": [MockFunction],
                        }
                      }
                    />,
                  },
                  "tag": 0,
                },
              },
            },
            "child": [Circular],
            "childExpirationTime": 0,
            "effectTag": 32,
            "expirationTime": 0,
            "firstContextDependency": null,
            "firstEffect": [Circular],
            "index": 0,
            "key": null,
            "lastEffect": [Circular],
            "memoizedProps": null,
            "memoizedState": Object {
              "element": <WrapperComponent
                Component={[Function]}
                context={null}
                props={
                  Object {
                    "showPeople": [MockFunction],
                    "showPlanet": [MockFunction],
                    "showVehicle": [MockFunction],
                    "toggleCategoryState": [MockFunction],
                  }
                }
              />,
            },
            "mode": 0,
            "nextEffect": null,
            "pendingProps": null,
            "ref": null,
            "return": null,
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": Object {
              "containerInfo": <div>
                <div
                  class="button-container"
                >
                  <button
                    class="cat-button people-button 
		      	cat-button-inactive"
                    name="people"
                  >
                    People
                  </button>
                  <button
                    class="cat-button planets-button 
		      	cat-button-inactive"
                    name="planets"
                  >
                    Planets
                  </button>
                  <button
                    class="cat-button vehicles-button 
		      	cat-button-inactive"
                    name="vehicles"
                  >
                    Vehicles
                  </button>
                  <div
                    class="FavoriteButton"
                  >
                    <button
                      class="cat-button favorites-button"
                    >
                      Favorites
                      <span
                        class="favorites-count"
                      />
                    </button>
                  </div>
                </div>
              </div>,
              "context": Object {},
              "current": [Circular],
              "didError": false,
              "earliestPendingTime": 0,
              "earliestSuspendedTime": 0,
              "expirationTime": 0,
              "finishedWork": null,
              "firstBatch": null,
              "hydrate": false,
              "interactionThreadID": 12,
              "latestPendingTime": 0,
              "latestPingedTime": 0,
              "latestSuspendedTime": 0,
              "memoizedInteractions": Set {},
              "nextExpirationTimeToWorkOn": 0,
              "nextScheduledRoot": null,
              "pendingChildren": null,
              "pendingCommitExpirationTime": 0,
              "pendingContext": null,
              "pendingInteractionMap": Map {},
              "timeoutHandle": -1,
            },
            "tag": 5,
            "treeBaseDuration": 0,
            "type": null,
            "updateQueue": Object {
              "baseState": Object {
                "element": <WrapperComponent
                  Component={[Function]}
                  context={null}
                  props={
                    Object {
                      "showPeople": [MockFunction],
                      "showPlanet": [MockFunction],
                      "showVehicle": [MockFunction],
                      "toggleCategoryState": [MockFunction],
                    }
                  }
                />,
              },
              "firstCapturedEffect": null,
              "firstCapturedUpdate": null,
              "firstEffect": null,
              "firstUpdate": null,
              "lastCapturedEffect": null,
              "lastCapturedUpdate": null,
              "lastEffect": null,
              "lastUpdate": null,
            },
          },
          "selfBaseDuration": 0,
          "sibling": null,
          "stateNode": WrapperComponent {
            "_reactInternalFiber": [Circular],
            "_reactInternalInstance": Object {},
            "context": Object {},
            "props": Object {
              "Component": [Function],
              "context": null,
              "props": Object {
                "showPeople": [MockFunction],
                "showPlanet": [MockFunction],
                "showVehicle": [MockFunction],
                "toggleCategoryState": [MockFunction],
              },
            },
            "refs": Object {},
            "state": Object {
              "context": null,
              "mount": true,
              "props": Object {
                "showPeople": [MockFunction],
                "showPlanet": [MockFunction],
                "showVehicle": [MockFunction],
                "toggleCategoryState": [MockFunction],
              },
            },
            "updater": Object {
              "enqueueForceUpdate": [Function],
              "enqueueReplaceState": [Function],
              "enqueueSetState": [Function],
              "isMounted": [Function],
            },
          },
          "tag": 2,
          "treeBaseDuration": 0,
          "type": [Function],
          "updateQueue": null,
        },
        "_debugSource": null,
        "actualDuration": 0,
        "actualStartTime": -1,
        "alternate": null,
        "child": FiberNode {
          "_debugID": 51,
          "_debugIsCurrentlyTiming": false,
          "_debugOwner": [Circular],
          "_debugSource": Object {
            "fileName": "/Users/djcaraballo/Turing 2.0/Mod3/Mod3Projects/swapibox/src/components/Nav/Nav.js",
            "lineNumber": 67,
          },
          "actualDuration": 0,
          "actualStartTime": -1,
          "alternate": null,
          "child": FiberNode {
            "_debugID": 52,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": [Circular],
            "_debugSource": Object {
              "fileName": "/Users/djcaraballo/Turing 2.0/Mod3/Mod3Projects/swapibox/src/components/Nav/Nav.js",
              "lineNumber": 68,
            },
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": null,
            "child": null,
            "childExpirationTime": 0,
            "effectTag": 0,
            "expirationTime": 0,
            "firstContextDependency": null,
            "firstEffect": null,
            "index": 0,
            "key": null,
            "lastEffect": null,
            "memoizedProps": Object {
              "children": "People",
              "className": "cat-button people-button 
		      	cat-button-inactive",
              "name": "people",
              "onClick": [Function],
            },
            "memoizedState": null,
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "children": "People",
              "className": "cat-button people-button 
		      	cat-button-inactive",
              "name": "people",
              "onClick": [Function],
            },
            "ref": null,
            "return": [Circular],
            "selfBaseDuration": 0,
            "sibling": FiberNode {
              "_debugID": 53,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": [Circular],
              "_debugSource": Object {
                "fileName": "/Users/djcaraballo/Turing 2.0/Mod3/Mod3Projects/swapibox/src/components/Nav/Nav.js",
                "lineNumber": 76,
              },
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": null,
              "childExpirationTime": 0,
              "effectTag": 0,
              "expirationTime": 0,
              "firstContextDependency": null,
              "firstEffect": null,
              "index": 1,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "children": "Planets",
                "className": "cat-button planets-button 
		      	cat-button-inactive",
                "name": "planets",
                "onClick": [Function],
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "children": "Planets",
                "className": "cat-button planets-button 
		      	cat-button-inactive",
                "name": "planets",
                "onClick": [Function],
              },
              "ref": null,
              "return": [Circular],
              "selfBaseDuration": 0,
              "sibling": FiberNode {
                "_debugID": 54,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": Object {
                  "fileName": "/Users/djcaraballo/Turing 2.0/Mod3/Mod3Projects/swapibox/src/components/Nav/Nav.js",
                  "lineNumber": 84,
                },
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": null,
                "childExpirationTime": 0,
                "effectTag": 0,
                "expirationTime": 0,
                "firstContextDependency": null,
                "firstEffect": null,
                "index": 2,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "children": "Vehicles",
                  "className": "cat-button vehicles-button 
		      	cat-button-inactive",
                  "name": "vehicles",
                  "onClick": [Function],
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "children": "Vehicles",
                  "className": "cat-button vehicles-button 
		      	cat-button-inactive",
                  "name": "vehicles",
                  "onClick": [Function],
                },
                "ref": null,
                "return": [Circular],
                "selfBaseDuration": 0,
                "sibling": FiberNode {
                  "_debugID": 55,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": Object {
                    "fileName": "/Users/djcaraballo/Turing 2.0/Mod3/Mod3Projects/swapibox/src/components/Nav/Nav.js",
                    "lineNumber": 92,
                  },
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": null,
                  "child": FiberNode {
                    "_debugID": 56,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": Object {
                      "fileName": "/Users/djcaraballo/Turing 2.0/Mod3/Mod3Projects/swapibox/src/components/FavoriteButton/FavoriteButton.js",
                      "lineNumber": 5,
                    },
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": null,
                    "child": FiberNode {
                      "_debugID": 57,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": Object {
                        "fileName": "/Users/djcaraballo/Turing 2.0/Mod3/Mod3Projects/swapibox/src/components/FavoriteButton/FavoriteButton.js",
                        "lineNumber": 6,
                      },
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": null,
                      "child": FiberNode {
                        "_debugID": 58,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": null,
                        "child": null,
                        "childExpirationTime": 0,
                        "effectTag": 0,
                        "expirationTime": 0,
                        "firstContextDependency": null,
                        "firstEffect": null,
                        "index": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": "Favorites",
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": "Favorites",
                        "ref": null,
                        "return": [Circular],
                        "selfBaseDuration": 0,
                        "sibling": FiberNode {
                          "_debugID": 59,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": [Circular],
                          "_debugSource": Object {
                            "fileName": "/Users/djcaraballo/Turing 2.0/Mod3/Mod3Projects/swapibox/src/components/FavoriteButton/FavoriteButton.js",
                            "lineNumber": 8,
                          },
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": null,
                          "child": null,
                          "childExpirationTime": 0,
                          "effectTag": 0,
                          "expirationTime": 0,
                          "firstContextDependency": null,
                          "firstEffect": null,
                          "index": 1,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "children": undefined,
                            "className": "favorites-count",
                          },
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "children": undefined,
                            "className": "favorites-count",
                          },
                          "ref": null,
                          "return": [Circular],
                          "selfBaseDuration": 0,
                          "sibling": null,
                          "stateNode": <span
                            class="favorites-count"
                          />,
                          "tag": 7,
                          "treeBaseDuration": 0,
                          "type": "span",
                          "updateQueue": null,
                        },
                        "stateNode": Favorites,
                        "tag": 8,
                        "treeBaseDuration": 0,
                        "type": null,
                        "updateQueue": null,
                      },
                      "childExpirationTime": 0,
                      "effectTag": 0,
                      "expirationTime": 0,
                      "firstContextDependency": null,
                      "firstEffect": null,
                      "index": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "children": Array [
                          "Favorites",
                          <span
                            className="favorites-count"
                          />,
                        ],
                        "className": "cat-button favorites-button",
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "children": Array [
                          "Favorites",
                          <span
                            className="favorites-count"
                          />,
                        ],
                        "className": "cat-button favorites-button",
                      },
                      "ref": null,
                      "return": [Circular],
                      "selfBaseDuration": 0,
                      "sibling": null,
                      "stateNode": <button
                        class="cat-button favorites-button"
                      >
                        Favorites
                        <span
                          class="favorites-count"
                        />
                      </button>,
                      "tag": 7,
                      "treeBaseDuration": 0,
                      "type": "button",
                      "updateQueue": null,
                    },
                    "childExpirationTime": 0,
                    "effectTag": 0,
                    "expirationTime": 0,
                    "firstContextDependency": null,
                    "firstEffect": null,
                    "index": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": <button
                        className="cat-button favorites-button"
                      >
                        Favorites
                        <span
                          className="favorites-count"
                        />
                      </button>,
                      "className": "FavoriteButton",
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "children": <button
                        className="cat-button favorites-button"
                      >
                        Favorites
                        <span
                          className="favorites-count"
                        />
                      </button>,
                      "className": "FavoriteButton",
                    },
                    "ref": null,
                    "return": [Circular],
                    "selfBaseDuration": 0,
                    "sibling": null,
                    "stateNode": <div
                      class="FavoriteButton"
                    >
                      <button
                        class="cat-button favorites-button"
                      >
                        Favorites
                        <span
                          class="favorites-count"
                        />
                      </button>
                    </div>,
                    "tag": 7,
                    "treeBaseDuration": 0,
                    "type": "div",
                    "updateQueue": null,
                  },
                  "childExpirationTime": 0,
                  "effectTag": 1,
                  "expirationTime": 0,
                  "firstContextDependency": null,
                  "firstEffect": null,
                  "index": 3,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "className": "FavoriteButton",
                    "favoritesCount": undefined,
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "className": "FavoriteButton",
                    "favoritesCount": undefined,
                  },
                  "ref": null,
                  "return": [Circular],
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": null,
                  "tag": 0,
                  "treeBaseDuration": 0,
                  "type": [Function],
                  "updateQueue": null,
                },
                "stateNode": <button
                  class="cat-button vehicles-button 
		      	cat-button-inactive"
                  name="vehicles"
                >
                  Vehicles
                </button>,
                "tag": 7,
                "treeBaseDuration": 0,
                "type": "button",
                "updateQueue": null,
              },
              "stateNode": <button
                class="cat-button planets-button 
		      	cat-button-inactive"
                name="planets"
              >
                Planets
              </button>,
              "tag": 7,
              "treeBaseDuration": 0,
              "type": "button",
              "updateQueue": null,
            },
            "stateNode": <button
              class="cat-button people-button 
		      	cat-button-inactive"
              name="people"
            >
              People
            </button>,
            "tag": 7,
            "treeBaseDuration": 0,
            "type": "button",
            "updateQueue": null,
          },
          "childExpirationTime": 0,
          "effectTag": 0,
          "expirationTime": 0,
          "firstContextDependency": null,
          "firstEffect": null,
          "index": 0,
          "key": null,
          "lastEffect": null,
          "memoizedProps": Object {
            "children": Array [
              <button
                className="cat-button people-button 
		      	cat-button-inactive"
                name="people"
                onClick={[Function]}
              >
                People
              </button>,
              <button
                className="cat-button planets-button 
		      	cat-button-inactive"
                name="planets"
                onClick={[Function]}
              >
                Planets
              </button>,
              <button
                className="cat-button vehicles-button 
		      	cat-button-inactive"
                name="vehicles"
                onClick={[Function]}
              >
                Vehicles
              </button>,
              <FavoriteButton
                className="FavoriteButton"
              />,
            ],
            "className": "button-container",
          },
          "memoizedState": null,
          "mode": 0,
          "nextEffect": null,
          "pendingProps": Object {
            "children": Array [
              <button
                className="cat-button people-button 
		      	cat-button-inactive"
                name="people"
                onClick={[Function]}
              >
                People
              </button>,
              <button
                className="cat-button planets-button 
		      	cat-button-inactive"
                name="planets"
                onClick={[Function]}
              >
                Planets
              </button>,
              <button
                className="cat-button vehicles-button 
		      	cat-button-inactive"
                name="vehicles"
                onClick={[Function]}
              >
                Vehicles
              </button>,
              <FavoriteButton
                className="FavoriteButton"
              />,
            ],
            "className": "button-container",
          },
          "ref": null,
          "return": [Circular],
          "selfBaseDuration": 0,
          "sibling": null,
          "stateNode": <div
            class="button-container"
          >
            <button
              class="cat-button people-button 
		      	cat-button-inactive"
              name="people"
            >
              People
            </button>
            <button
              class="cat-button planets-button 
		      	cat-button-inactive"
              name="planets"
            >
              Planets
            </button>
            <button
              class="cat-button vehicles-button 
		      	cat-button-inactive"
              name="vehicles"
            >
              Vehicles
            </button>
            <div
              class="FavoriteButton"
            >
              <button
                class="cat-button favorites-button"
              >
                Favorites
                <span
                  class="favorites-count"
                />
              </button>
            </div>
          </div>,
          "tag": 7,
          "treeBaseDuration": 0,
          "type": "div",
          "updateQueue": null,
        },
        "childExpirationTime": 0,
        "effectTag": 1,
        "expirationTime": 0,
        "firstContextDependency": null,
        "firstEffect": null,
        "index": 0,
        "key": null,
        "lastEffect": null,
        "memoizedProps": Object {
          "showPeople": [MockFunction],
          "showPlanet": [MockFunction],
          "showVehicle": [MockFunction],
          "toggleCategoryState": [MockFunction],
        },
        "memoizedState": Object {
          "peopleSelected": false,
          "planetsSelected": false,
          "vehiclesSelected": false,
        },
        "mode": 0,
        "nextEffect": null,
        "pendingProps": Object {
          "showPeople": [MockFunction],
          "showPlanet": [MockFunction],
          "showVehicle": [MockFunction],
          "toggleCategoryState": [MockFunction],
        },
        "ref": null,
        "return": FiberNode {
          "_debugID": 49,
          "_debugIsCurrentlyTiming": false,
          "_debugOwner": null,
          "_debugSource": null,
          "actualDuration": 0,
          "actualStartTime": -1,
          "alternate": null,
          "child": [Circular],
          "childExpirationTime": 0,
          "effectTag": 1,
          "expirationTime": 0,
          "firstContextDependency": null,
          "firstEffect": null,
          "index": 0,
          "key": null,
          "lastEffect": null,
          "memoizedProps": Object {
            "Component": [Function],
            "context": null,
            "props": Object {
              "showPeople": [MockFunction],
              "showPlanet": [MockFunction],
              "showVehicle": [MockFunction],
              "toggleCategoryState": [MockFunction],
            },
          },
          "memoizedState": Object {
            "context": null,
            "mount": true,
            "props": Object {
              "showPeople": [MockFunction],
              "showPlanet": [MockFunction],
              "showVehicle": [MockFunction],
              "toggleCategoryState": [MockFunction],
            },
          },
          "mode": 0,
          "nextEffect": null,
          "pendingProps": Object {
            "Component": [Function],
            "context": null,
            "props": Object {
              "showPeople": [MockFunction],
              "showPlanet": [MockFunction],
              "showVehicle": [MockFunction],
              "toggleCategoryState": [MockFunction],
            },
          },
          "ref": null,
          "return": FiberNode {
            "_debugID": 47,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": null,
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": FiberNode {
              "_debugID": 47,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": null,
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": [Circular],
              "child": null,
              "childExpirationTime": 0,
              "effectTag": 0,
              "expirationTime": 1,
              "firstContextDependency": null,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": null,
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": null,
              "ref": null,
              "return": null,
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": Object {
                "containerInfo": <div>
                  <div
                    class="button-container"
                  >
                    <button
                      class="cat-button people-button 
		      	cat-button-inactive"
                      name="people"
                    >
                      People
                    </button>
                    <button
                      class="cat-button planets-button 
		      	cat-button-inactive"
                      name="planets"
                    >
                      Planets
                    </button>
                    <button
                      class="cat-button vehicles-button 
		      	cat-button-inactive"
                      name="vehicles"
                    >
                      Vehicles
                    </button>
                    <div
                      class="FavoriteButton"
                    >
                      <button
                        class="cat-button favorites-button"
                      >
                        Favorites
                        <span
                          class="favorites-count"
                        />
                      </button>
                    </div>
                  </div>
                </div>,
                "context": Object {},
                "current": [Circular],
                "didError": false,
                "earliestPendingTime": 0,
                "earliestSuspendedTime": 0,
                "expirationTime": 0,
                "finishedWork": null,
                "firstBatch": null,
                "hydrate": false,
                "interactionThreadID": 12,
                "latestPendingTime": 0,
                "latestPingedTime": 0,
                "latestSuspendedTime": 0,
                "memoizedInteractions": Set {},
                "nextExpirationTimeToWorkOn": 0,
                "nextScheduledRoot": null,
                "pendingChildren": null,
                "pendingCommitExpirationTime": 0,
                "pendingContext": null,
                "pendingInteractionMap": Map {},
                "timeoutHandle": -1,
              },
              "tag": 5,
              "treeBaseDuration": 0,
              "type": null,
              "updateQueue": Object {
                "baseState": null,
                "firstCapturedEffect": null,
                "firstCapturedUpdate": null,
                "firstEffect": null,
                "firstUpdate": Object {
                  "callback": null,
                  "expirationTime": 1,
                  "next": null,
                  "nextEffect": null,
                  "payload": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={
                        Object {
                          "showPeople": [MockFunction],
                          "showPlanet": [MockFunction],
                          "showVehicle": [MockFunction],
                          "toggleCategoryState": [MockFunction],
                        }
                      }
                    />,
                  },
                  "tag": 0,
                },
                "lastCapturedEffect": null,
                "lastCapturedUpdate": null,
                "lastEffect": null,
                "lastUpdate": Object {
                  "callback": null,
                  "expirationTime": 1,
                  "next": null,
                  "nextEffect": null,
                  "payload": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={
                        Object {
                          "showPeople": [MockFunction],
                          "showPlanet": [MockFunction],
                          "showVehicle": [MockFunction],
                          "toggleCategoryState": [MockFunction],
                        }
                      }
                    />,
                  },
                  "tag": 0,
                },
              },
            },
            "child": [Circular],
            "childExpirationTime": 0,
            "effectTag": 32,
            "expirationTime": 0,
            "firstContextDependency": null,
            "firstEffect": [Circular],
            "index": 0,
            "key": null,
            "lastEffect": [Circular],
            "memoizedProps": null,
            "memoizedState": Object {
              "element": <WrapperComponent
                Component={[Function]}
                context={null}
                props={
                  Object {
                    "showPeople": [MockFunction],
                    "showPlanet": [MockFunction],
                    "showVehicle": [MockFunction],
                    "toggleCategoryState": [MockFunction],
                  }
                }
              />,
            },
            "mode": 0,
            "nextEffect": null,
            "pendingProps": null,
            "ref": null,
            "return": null,
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": Object {
              "containerInfo": <div>
                <div
                  class="button-container"
                >
                  <button
                    class="cat-button people-button 
		      	cat-button-inactive"
                    name="people"
                  >
                    People
                  </button>
                  <button
                    class="cat-button planets-button 
		      	cat-button-inactive"
                    name="planets"
                  >
                    Planets
                  </button>
                  <button
                    class="cat-button vehicles-button 
		      	cat-button-inactive"
                    name="vehicles"
                  >
                    Vehicles
                  </button>
                  <div
                    class="FavoriteButton"
                  >
                    <button
                      class="cat-button favorites-button"
                    >
                      Favorites
                      <span
                        class="favorites-count"
                      />
                    </button>
                  </div>
                </div>
              </div>,
              "context": Object {},
              "current": [Circular],
              "didError": false,
              "earliestPendingTime": 0,
              "earliestSuspendedTime": 0,
              "expirationTime": 0,
              "finishedWork": null,
              "firstBatch": null,
              "hydrate": false,
              "interactionThreadID": 12,
              "latestPendingTime": 0,
              "latestPingedTime": 0,
              "latestSuspendedTime": 0,
              "memoizedInteractions": Set {},
              "nextExpirationTimeToWorkOn": 0,
              "nextScheduledRoot": null,
              "pendingChildren": null,
              "pendingCommitExpirationTime": 0,
              "pendingContext": null,
              "pendingInteractionMap": Map {},
              "timeoutHandle": -1,
            },
            "tag": 5,
            "treeBaseDuration": 0,
            "type": null,
            "updateQueue": Object {
              "baseState": Object {
                "element": <WrapperComponent
                  Component={[Function]}
                  context={null}
                  props={
                    Object {
                      "showPeople": [MockFunction],
                      "showPlanet": [MockFunction],
                      "showVehicle": [MockFunction],
                      "toggleCategoryState": [MockFunction],
                    }
                  }
                />,
              },
              "firstCapturedEffect": null,
              "firstCapturedUpdate": null,
              "firstEffect": null,
              "firstUpdate": null,
              "lastCapturedEffect": null,
              "lastCapturedUpdate": null,
              "lastEffect": null,
              "lastUpdate": null,
            },
          },
          "selfBaseDuration": 0,
          "sibling": null,
          "stateNode": WrapperComponent {
            "_reactInternalFiber": [Circular],
            "_reactInternalInstance": Object {},
            "context": Object {},
            "props": Object {
              "Component": [Function],
              "context": null,
              "props": Object {
                "showPeople": [MockFunction],
                "showPlanet": [MockFunction],
                "showVehicle": [MockFunction],
                "toggleCategoryState": [MockFunction],
              },
            },
            "refs": Object {},
            "state": Object {
              "context": null,
              "mount": true,
              "props": Object {
                "showPeople": [MockFunction],
                "showPlanet": [MockFunction],
                "showVehicle": [MockFunction],
                "toggleCategoryState": [MockFunction],
              },
            },
            "updater": Object {
              "enqueueForceUpdate": [Function],
              "enqueueReplaceState": [Function],
              "enqueueSetState": [Function],
              "isMounted": [Function],
            },
          },
          "tag": 2,
          "treeBaseDuration": 0,
          "type": [Function],
          "updateQueue": null,
        },
        "selfBaseDuration": 0,
        "sibling": null,
        "stateNode": [Circular],
        "tag": 2,
        "treeBaseDuration": 0,
        "type": [Function],
        "updateQueue": null,
      },
      "_reactInternalInstance": Object {},
      "context": Object {},
      "handlePeopleClick": [Function],
      "handlePlanetClick": [Function],
      "handleVehicleClick": [Function],
      "props": Object {
        "showPeople": [MockFunction],
        "showPlanet": [MockFunction],
        "showVehicle": [MockFunction],
        "toggleCategoryState": [MockFunction],
      },
      "refs": Object {},
      "state": Object {
        "peopleSelected": false,
        "planetsSelected": false,
        "vehiclesSelected": false,
      },
      "updater": Object {
        "enqueueForceUpdate": [Function],
        "enqueueReplaceState": [Function],
        "enqueueSetState": [Function],
        "isMounted": [Function],
      },
    },
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "showPeople": [MockFunction],
      "showPlanet": [MockFunction],
      "showVehicle": [MockFunction],
      "toggleCategoryState": [MockFunction],
    },
    "ref": null,
    "rendered": Object {
      "instance": <div
        class="button-container"
      >
        <button
          class="cat-button people-button 
		      	cat-button-inactive"
          name="people"
        >
          People
        </button>
        <button
          class="cat-button planets-button 
		      	cat-button-inactive"
          name="planets"
        >
          Planets
        </button>
        <button
          class="cat-button vehicles-button 
		      	cat-button-inactive"
          name="vehicles"
        >
          Vehicles
        </button>
        <div
          class="FavoriteButton"
        >
          <button
            class="cat-button favorites-button"
          >
            Favorites
            <span
              class="favorites-count"
            />
          </button>
        </div>
      </div>,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <button
            className="cat-button people-button 
		      	cat-button-inactive"
            name="people"
            onClick={[Function]}
          >
            People
          </button>,
          <button
            className="cat-button planets-button 
		      	cat-button-inactive"
            name="planets"
            onClick={[Function]}
          >
            Planets
          </button>,
          <button
            className="cat-button vehicles-button 
		      	cat-button-inactive"
            name="vehicles"
            onClick={[Function]}
          >
            Vehicles
          </button>,
          <FavoriteButton
            className="FavoriteButton"
          />,
        ],
        "className": "button-container",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": <button
            class="cat-button people-button 
		      	cat-button-inactive"
            name="people"
          >
            People
          </button>,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "People",
            "className": "cat-button people-button 
		      	cat-button-inactive",
            "name": "people",
            "onClick": [Function],
          },
          "ref": null,
          "rendered": Array [
            "People",
          ],
          "type": "button",
        },
        Object {
          "instance": <button
            class="cat-button planets-button 
		      	cat-button-inactive"
            name="planets"
          >
            Planets
          </button>,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Planets",
            "className": "cat-button planets-button 
		      	cat-button-inactive",
            "name": "planets",
            "onClick": [Function],
          },
          "ref": null,
          "rendered": Array [
            "Planets",
          ],
          "type": "button",
        },
        Object {
          "instance": <button
            class="cat-button vehicles-button 
		      	cat-button-inactive"
            name="vehicles"
          >
            Vehicles
          </button>,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Vehicles",
            "className": "cat-button vehicles-button 
		      	cat-button-inactive",
            "name": "vehicles",
            "onClick": [Function],
          },
          "ref": null,
          "rendered": Array [
            "Vehicles",
          ],
          "type": "button",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "className": "FavoriteButton",
            "favoritesCount": undefined,
          },
          "ref": null,
          "rendered": Object {
            "instance": <div
              class="FavoriteButton"
            >
              <button
                class="cat-button favorites-button"
              >
                Favorites
                <span
                  class="favorites-count"
                />
              </button>
            </div>,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <button
                className="cat-button favorites-button"
              >
                Favorites
                <span
                  className="favorites-count"
                />
              </button>,
              "className": "FavoriteButton",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": <button
                  class="cat-button favorites-button"
                >
                  Favorites
                  <span
                    class="favorites-count"
                  />
                </button>,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    "Favorites",
                    <span
                      className="favorites-count"
                    />,
                  ],
                  "className": "cat-button favorites-button",
                },
                "ref": null,
                "rendered": Array [
                  "Favorites",
                  Object {
                    "instance": <span
                      class="favorites-count"
                    />,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": undefined,
                      "className": "favorites-count",
                    },
                    "ref": null,
                    "rendered": Array [
                      undefined,
                    ],
                    "type": "span",
                  },
                ],
                "type": "button",
              },
            ],
            "type": "div",
          },
          "type": [Function],
        },
      ],
      "type": "div",
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": Nav {
        "_reactInternalFiber": FiberNode {
          "_debugID": 50,
          "_debugIsCurrentlyTiming": false,
          "_debugOwner": FiberNode {
            "_debugID": 49,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": null,
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": null,
            "child": [Circular],
            "childExpirationTime": 0,
            "effectTag": 1,
            "expirationTime": 0,
            "firstContextDependency": null,
            "firstEffect": null,
            "index": 0,
            "key": null,
            "lastEffect": null,
            "memoizedProps": Object {
              "Component": [Function],
              "context": null,
              "props": Object {
                "showPeople": [MockFunction],
                "showPlanet": [MockFunction],
                "showVehicle": [MockFunction],
                "toggleCategoryState": [MockFunction],
              },
            },
            "memoizedState": Object {
              "context": null,
              "mount": true,
              "props": Object {
                "showPeople": [MockFunction],
                "showPlanet": [MockFunction],
                "showVehicle": [MockFunction],
                "toggleCategoryState": [MockFunction],
              },
            },
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "Component": [Function],
              "context": null,
              "props": Object {
                "showPeople": [MockFunction],
                "showPlanet": [MockFunction],
                "showVehicle": [MockFunction],
                "toggleCategoryState": [MockFunction],
              },
            },
            "ref": null,
            "return": FiberNode {
              "_debugID": 47,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": null,
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": FiberNode {
                "_debugID": 47,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": null,
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": [Circular],
                "child": null,
                "childExpirationTime": 0,
                "effectTag": 0,
                "expirationTime": 1,
                "firstContextDependency": null,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": null,
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": null,
                "ref": null,
                "return": null,
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": Object {
                  "containerInfo": <div>
                    <div
                      class="button-container"
                    >
                      <button
                        class="cat-button people-button 
		      	cat-button-inactive"
                        name="people"
                      >
                        People
                      </button>
                      <button
                        class="cat-button planets-button 
		      	cat-button-inactive"
                        name="planets"
                      >
                        Planets
                      </button>
                      <button
                        class="cat-button vehicles-button 
		      	cat-button-inactive"
                        name="vehicles"
                      >
                        Vehicles
                      </button>
                      <div
                        class="FavoriteButton"
                      >
                        <button
                          class="cat-button favorites-button"
                        >
                          Favorites
                          <span
                            class="favorites-count"
                          />
                        </button>
                      </div>
                    </div>
                  </div>,
                  "context": Object {},
                  "current": [Circular],
                  "didError": false,
                  "earliestPendingTime": 0,
                  "earliestSuspendedTime": 0,
                  "expirationTime": 0,
                  "finishedWork": null,
                  "firstBatch": null,
                  "hydrate": false,
                  "interactionThreadID": 12,
                  "latestPendingTime": 0,
                  "latestPingedTime": 0,
                  "latestSuspendedTime": 0,
                  "memoizedInteractions": Set {},
                  "nextExpirationTimeToWorkOn": 0,
                  "nextScheduledRoot": null,
                  "pendingChildren": null,
                  "pendingCommitExpirationTime": 0,
                  "pendingContext": null,
                  "pendingInteractionMap": Map {},
                  "timeoutHandle": -1,
                },
                "tag": 5,
                "treeBaseDuration": 0,
                "type": null,
                "updateQueue": Object {
                  "baseState": null,
                  "firstCapturedEffect": null,
                  "firstCapturedUpdate": null,
                  "firstEffect": null,
                  "firstUpdate": Object {
                    "callback": null,
                    "expirationTime": 1,
                    "next": null,
                    "nextEffect": null,
                    "payload": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={
                          Object {
                            "showPeople": [MockFunction],
                            "showPlanet": [MockFunction],
                            "showVehicle": [MockFunction],
                            "toggleCategoryState": [MockFunction],
                          }
                        }
                      />,
                    },
                    "tag": 0,
                  },
                  "lastCapturedEffect": null,
                  "lastCapturedUpdate": null,
                  "lastEffect": null,
                  "lastUpdate": Object {
                    "callback": null,
                    "expirationTime": 1,
                    "next": null,
                    "nextEffect": null,
                    "payload": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={
                          Object {
                            "showPeople": [MockFunction],
                            "showPlanet": [MockFunction],
                            "showVehicle": [MockFunction],
                            "toggleCategoryState": [MockFunction],
                          }
                        }
                      />,
                    },
                    "tag": 0,
                  },
                },
              },
              "child": [Circular],
              "childExpirationTime": 0,
              "effectTag": 32,
              "expirationTime": 0,
              "firstContextDependency": null,
              "firstEffect": [Circular],
              "index": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": null,
              "memoizedState": Object {
                "element": <WrapperComponent
                  Component={[Function]}
                  context={null}
                  props={
                    Object {
                      "showPeople": [MockFunction],
                      "showPlanet": [MockFunction],
                      "showVehicle": [MockFunction],
                      "toggleCategoryState": [MockFunction],
                    }
                  }
                />,
              },
              "mode": 0,
              "nextEffect": null,
              "pendingProps": null,
              "ref": null,
              "return": null,
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": Object {
                "containerInfo": <div>
                  <div
                    class="button-container"
                  >
                    <button
                      class="cat-button people-button 
		      	cat-button-inactive"
                      name="people"
                    >
                      People
                    </button>
                    <button
                      class="cat-button planets-button 
		      	cat-button-inactive"
                      name="planets"
                    >
                      Planets
                    </button>
                    <button
                      class="cat-button vehicles-button 
		      	cat-button-inactive"
                      name="vehicles"
                    >
                      Vehicles
                    </button>
                    <div
                      class="FavoriteButton"
                    >
                      <button
                        class="cat-button favorites-button"
                      >
                        Favorites
                        <span
                          class="favorites-count"
                        />
                      </button>
                    </div>
                  </div>
                </div>,
                "context": Object {},
                "current": [Circular],
                "didError": false,
                "earliestPendingTime": 0,
                "earliestSuspendedTime": 0,
                "expirationTime": 0,
                "finishedWork": null,
                "firstBatch": null,
                "hydrate": false,
                "interactionThreadID": 12,
                "latestPendingTime": 0,
                "latestPingedTime": 0,
                "latestSuspendedTime": 0,
                "memoizedInteractions": Set {},
                "nextExpirationTimeToWorkOn": 0,
                "nextScheduledRoot": null,
                "pendingChildren": null,
                "pendingCommitExpirationTime": 0,
                "pendingContext": null,
                "pendingInteractionMap": Map {},
                "timeoutHandle": -1,
              },
              "tag": 5,
              "treeBaseDuration": 0,
              "type": null,
              "updateQueue": Object {
                "baseState": Object {
                  "element": <WrapperComponent
                    Component={[Function]}
                    context={null}
                    props={
                      Object {
                        "showPeople": [MockFunction],
                        "showPlanet": [MockFunction],
                        "showVehicle": [MockFunction],
                        "toggleCategoryState": [MockFunction],
                      }
                    }
                  />,
                },
                "firstCapturedEffect": null,
                "firstCapturedUpdate": null,
                "firstEffect": null,
                "firstUpdate": null,
                "lastCapturedEffect": null,
                "lastCapturedUpdate": null,
                "lastEffect": null,
                "lastUpdate": null,
              },
            },
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": WrapperComponent {
              "_reactInternalFiber": [Circular],
              "_reactInternalInstance": Object {},
              "context": Object {},
              "props": Object {
                "Component": [Function],
                "context": null,
                "props": Object {
                  "showPeople": [MockFunction],
                  "showPlanet": [MockFunction],
                  "showVehicle": [MockFunction],
                  "toggleCategoryState": [MockFunction],
                },
              },
              "refs": Object {},
              "state": Object {
                "context": null,
                "mount": true,
                "props": Object {
                  "showPeople": [MockFunction],
                  "showPlanet": [MockFunction],
                  "showVehicle": [MockFunction],
                  "toggleCategoryState": [MockFunction],
                },
              },
              "updater": Object {
                "enqueueForceUpdate": [Function],
                "enqueueReplaceState": [Function],
                "enqueueSetState": [Function],
                "isMounted": [Function],
              },
            },
            "tag": 2,
            "treeBaseDuration": 0,
            "type": [Function],
            "updateQueue": null,
          },
          "_debugSource": null,
          "actualDuration": 0,
          "actualStartTime": -1,
          "alternate": null,
          "child": FiberNode {
            "_debugID": 51,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": [Circular],
            "_debugSource": Object {
              "fileName": "/Users/djcaraballo/Turing 2.0/Mod3/Mod3Projects/swapibox/src/components/Nav/Nav.js",
              "lineNumber": 67,
            },
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": null,
            "child": FiberNode {
              "_debugID": 52,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": [Circular],
              "_debugSource": Object {
                "fileName": "/Users/djcaraballo/Turing 2.0/Mod3/Mod3Projects/swapibox/src/components/Nav/Nav.js",
                "lineNumber": 68,
              },
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": null,
              "childExpirationTime": 0,
              "effectTag": 0,
              "expirationTime": 0,
              "firstContextDependency": null,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "children": "People",
                "className": "cat-button people-button 
		      	cat-button-inactive",
                "name": "people",
                "onClick": [Function],
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "children": "People",
                "className": "cat-button people-button 
		      	cat-button-inactive",
                "name": "people",
                "onClick": [Function],
              },
              "ref": null,
              "return": [Circular],
              "selfBaseDuration": 0,
              "sibling": FiberNode {
                "_debugID": 53,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": Object {
                  "fileName": "/Users/djcaraballo/Turing 2.0/Mod3/Mod3Projects/swapibox/src/components/Nav/Nav.js",
                  "lineNumber": 76,
                },
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": null,
                "childExpirationTime": 0,
                "effectTag": 0,
                "expirationTime": 0,
                "firstContextDependency": null,
                "firstEffect": null,
                "index": 1,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "children": "Planets",
                  "className": "cat-button planets-button 
		      	cat-button-inactive",
                  "name": "planets",
                  "onClick": [Function],
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "children": "Planets",
                  "className": "cat-button planets-button 
		      	cat-button-inactive",
                  "name": "planets",
                  "onClick": [Function],
                },
                "ref": null,
                "return": [Circular],
                "selfBaseDuration": 0,
                "sibling": FiberNode {
                  "_debugID": 54,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": Object {
                    "fileName": "/Users/djcaraballo/Turing 2.0/Mod3/Mod3Projects/swapibox/src/components/Nav/Nav.js",
                    "lineNumber": 84,
                  },
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": null,
                  "child": null,
                  "childExpirationTime": 0,
                  "effectTag": 0,
                  "expirationTime": 0,
                  "firstContextDependency": null,
                  "firstEffect": null,
                  "index": 2,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": "Vehicles",
                    "className": "cat-button vehicles-button 
		      	cat-button-inactive",
                    "name": "vehicles",
                    "onClick": [Function],
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "children": "Vehicles",
                    "className": "cat-button vehicles-button 
		      	cat-button-inactive",
                    "name": "vehicles",
                    "onClick": [Function],
                  },
                  "ref": null,
                  "return": [Circular],
                  "selfBaseDuration": 0,
                  "sibling": FiberNode {
                    "_debugID": 55,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": Object {
                      "fileName": "/Users/djcaraballo/Turing 2.0/Mod3/Mod3Projects/swapibox/src/components/Nav/Nav.js",
                      "lineNumber": 92,
                    },
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": null,
                    "child": FiberNode {
                      "_debugID": 56,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": Object {
                        "fileName": "/Users/djcaraballo/Turing 2.0/Mod3/Mod3Projects/swapibox/src/components/FavoriteButton/FavoriteButton.js",
                        "lineNumber": 5,
                      },
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": null,
                      "child": FiberNode {
                        "_debugID": 57,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": Object {
                          "fileName": "/Users/djcaraballo/Turing 2.0/Mod3/Mod3Projects/swapibox/src/components/FavoriteButton/FavoriteButton.js",
                          "lineNumber": 6,
                        },
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": null,
                        "child": FiberNode {
                          "_debugID": 58,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": null,
                          "child": null,
                          "childExpirationTime": 0,
                          "effectTag": 0,
                          "expirationTime": 0,
                          "firstContextDependency": null,
                          "firstEffect": null,
                          "index": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": "Favorites",
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": "Favorites",
                          "ref": null,
                          "return": [Circular],
                          "selfBaseDuration": 0,
                          "sibling": FiberNode {
                            "_debugID": 59,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": [Circular],
                            "_debugSource": Object {
                              "fileName": "/Users/djcaraballo/Turing 2.0/Mod3/Mod3Projects/swapibox/src/components/FavoriteButton/FavoriteButton.js",
                              "lineNumber": 8,
                            },
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": null,
                            "childExpirationTime": 0,
                            "effectTag": 0,
                            "expirationTime": 0,
                            "firstContextDependency": null,
                            "firstEffect": null,
                            "index": 1,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "children": undefined,
                              "className": "favorites-count",
                            },
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "children": undefined,
                              "className": "favorites-count",
                            },
                            "ref": null,
                            "return": [Circular],
                            "selfBaseDuration": 0,
                            "sibling": null,
                            "stateNode": <span
                              class="favorites-count"
                            />,
                            "tag": 7,
                            "treeBaseDuration": 0,
                            "type": "span",
                            "updateQueue": null,
                          },
                          "stateNode": Favorites,
                          "tag": 8,
                          "treeBaseDuration": 0,
                          "type": null,
                          "updateQueue": null,
                        },
                        "childExpirationTime": 0,
                        "effectTag": 0,
                        "expirationTime": 0,
                        "firstContextDependency": null,
                        "firstEffect": null,
                        "index": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "children": Array [
                            "Favorites",
                            <span
                              className="favorites-count"
                            />,
                          ],
                          "className": "cat-button favorites-button",
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "children": Array [
                            "Favorites",
                            <span
                              className="favorites-count"
                            />,
                          ],
                          "className": "cat-button favorites-button",
                        },
                        "ref": null,
                        "return": [Circular],
                        "selfBaseDuration": 0,
                        "sibling": null,
                        "stateNode": <button
                          class="cat-button favorites-button"
                        >
                          Favorites
                          <span
                            class="favorites-count"
                          />
                        </button>,
                        "tag": 7,
                        "treeBaseDuration": 0,
                        "type": "button",
                        "updateQueue": null,
                      },
                      "childExpirationTime": 0,
                      "effectTag": 0,
                      "expirationTime": 0,
                      "firstContextDependency": null,
                      "firstEffect": null,
                      "index": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "children": <button
                          className="cat-button favorites-button"
                        >
                          Favorites
                          <span
                            className="favorites-count"
                          />
                        </button>,
                        "className": "FavoriteButton",
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "children": <button
                          className="cat-button favorites-button"
                        >
                          Favorites
                          <span
                            className="favorites-count"
                          />
                        </button>,
                        "className": "FavoriteButton",
                      },
                      "ref": null,
                      "return": [Circular],
                      "selfBaseDuration": 0,
                      "sibling": null,
                      "stateNode": <div
                        class="FavoriteButton"
                      >
                        <button
                          class="cat-button favorites-button"
                        >
                          Favorites
                          <span
                            class="favorites-count"
                          />
                        </button>
                      </div>,
                      "tag": 7,
                      "treeBaseDuration": 0,
                      "type": "div",
                      "updateQueue": null,
                    },
                    "childExpirationTime": 0,
                    "effectTag": 1,
                    "expirationTime": 0,
                    "firstContextDependency": null,
                    "firstEffect": null,
                    "index": 3,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "className": "FavoriteButton",
                      "favoritesCount": undefined,
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "className": "FavoriteButton",
                      "favoritesCount": undefined,
                    },
                    "ref": null,
                    "return": [Circular],
                    "selfBaseDuration": 0,
                    "sibling": null,
                    "stateNode": null,
                    "tag": 0,
                    "treeBaseDuration": 0,
                    "type": [Function],
                    "updateQueue": null,
                  },
                  "stateNode": <button
                    class="cat-button vehicles-button 
		      	cat-button-inactive"
                    name="vehicles"
                  >
                    Vehicles
                  </button>,
                  "tag": 7,
                  "treeBaseDuration": 0,
                  "type": "button",
                  "updateQueue": null,
                },
                "stateNode": <button
                  class="cat-button planets-button 
		      	cat-button-inactive"
                  name="planets"
                >
                  Planets
                </button>,
                "tag": 7,
                "treeBaseDuration": 0,
                "type": "button",
                "updateQueue": null,
              },
              "stateNode": <button
                class="cat-button people-button 
		      	cat-button-inactive"
                name="people"
              >
                People
              </button>,
              "tag": 7,
              "treeBaseDuration": 0,
              "type": "button",
              "updateQueue": null,
            },
            "childExpirationTime": 0,
            "effectTag": 0,
            "expirationTime": 0,
            "firstContextDependency": null,
            "firstEffect": null,
            "index": 0,
            "key": null,
            "lastEffect": null,
            "memoizedProps": Object {
              "children": Array [
                <button
                  className="cat-button people-button 
		      	cat-button-inactive"
                  name="people"
                  onClick={[Function]}
                >
                  People
                </button>,
                <button
                  className="cat-button planets-button 
		      	cat-button-inactive"
                  name="planets"
                  onClick={[Function]}
                >
                  Planets
                </button>,
                <button
                  className="cat-button vehicles-button 
		      	cat-button-inactive"
                  name="vehicles"
                  onClick={[Function]}
                >
                  Vehicles
                </button>,
                <FavoriteButton
                  className="FavoriteButton"
                />,
              ],
              "className": "button-container",
            },
            "memoizedState": null,
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "children": Array [
                <button
                  className="cat-button people-button 
		      	cat-button-inactive"
                  name="people"
                  onClick={[Function]}
                >
                  People
                </button>,
                <button
                  className="cat-button planets-button 
		      	cat-button-inactive"
                  name="planets"
                  onClick={[Function]}
                >
                  Planets
                </button>,
                <button
                  className="cat-button vehicles-button 
		      	cat-button-inactive"
                  name="vehicles"
                  onClick={[Function]}
                >
                  Vehicles
                </button>,
                <FavoriteButton
                  className="FavoriteButton"
                />,
              ],
              "className": "button-container",
            },
            "ref": null,
            "return": [Circular],
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": <div
              class="button-container"
            >
              <button
                class="cat-button people-button 
		      	cat-button-inactive"
                name="people"
              >
                People
              </button>
              <button
                class="cat-button planets-button 
		      	cat-button-inactive"
                name="planets"
              >
                Planets
              </button>
              <button
                class="cat-button vehicles-button 
		      	cat-button-inactive"
                name="vehicles"
              >
                Vehicles
              </button>
              <div
                class="FavoriteButton"
              >
                <button
                  class="cat-button favorites-button"
                >
                  Favorites
                  <span
                    class="favorites-count"
                  />
                </button>
              </div>
            </div>,
            "tag": 7,
            "treeBaseDuration": 0,
            "type": "div",
            "updateQueue": null,
          },
          "childExpirationTime": 0,
          "effectTag": 1,
          "expirationTime": 0,
          "firstContextDependency": null,
          "firstEffect": null,
          "index": 0,
          "key": null,
          "lastEffect": null,
          "memoizedProps": Object {
            "showPeople": [MockFunction],
            "showPlanet": [MockFunction],
            "showVehicle": [MockFunction],
            "toggleCategoryState": [MockFunction],
          },
          "memoizedState": Object {
            "peopleSelected": false,
            "planetsSelected": false,
            "vehiclesSelected": false,
          },
          "mode": 0,
          "nextEffect": null,
          "pendingProps": Object {
            "showPeople": [MockFunction],
            "showPlanet": [MockFunction],
            "showVehicle": [MockFunction],
            "toggleCategoryState": [MockFunction],
          },
          "ref": null,
          "return": FiberNode {
            "_debugID": 49,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": null,
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": null,
            "child": [Circular],
            "childExpirationTime": 0,
            "effectTag": 1,
            "expirationTime": 0,
            "firstContextDependency": null,
            "firstEffect": null,
            "index": 0,
            "key": null,
            "lastEffect": null,
            "memoizedProps": Object {
              "Component": [Function],
              "context": null,
              "props": Object {
                "showPeople": [MockFunction],
                "showPlanet": [MockFunction],
                "showVehicle": [MockFunction],
                "toggleCategoryState": [MockFunction],
              },
            },
            "memoizedState": Object {
              "context": null,
              "mount": true,
              "props": Object {
                "showPeople": [MockFunction],
                "showPlanet": [MockFunction],
                "showVehicle": [MockFunction],
                "toggleCategoryState": [MockFunction],
              },
            },
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "Component": [Function],
              "context": null,
              "props": Object {
                "showPeople": [MockFunction],
                "showPlanet": [MockFunction],
                "showVehicle": [MockFunction],
                "toggleCategoryState": [MockFunction],
              },
            },
            "ref": null,
            "return": FiberNode {
              "_debugID": 47,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": null,
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": FiberNode {
                "_debugID": 47,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": null,
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": [Circular],
                "child": null,
                "childExpirationTime": 0,
                "effectTag": 0,
                "expirationTime": 1,
                "firstContextDependency": null,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": null,
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": null,
                "ref": null,
                "return": null,
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": Object {
                  "containerInfo": <div>
                    <div
                      class="button-container"
                    >
                      <button
                        class="cat-button people-button 
		      	cat-button-inactive"
                        name="people"
                      >
                        People
                      </button>
                      <button
                        class="cat-button planets-button 
		      	cat-button-inactive"
                        name="planets"
                      >
                        Planets
                      </button>
                      <button
                        class="cat-button vehicles-button 
		      	cat-button-inactive"
                        name="vehicles"
                      >
                        Vehicles
                      </button>
                      <div
                        class="FavoriteButton"
                      >
                        <button
                          class="cat-button favorites-button"
                        >
                          Favorites
                          <span
                            class="favorites-count"
                          />
                        </button>
                      </div>
                    </div>
                  </div>,
                  "context": Object {},
                  "current": [Circular],
                  "didError": false,
                  "earliestPendingTime": 0,
                  "earliestSuspendedTime": 0,
                  "expirationTime": 0,
                  "finishedWork": null,
                  "firstBatch": null,
                  "hydrate": false,
                  "interactionThreadID": 12,
                  "latestPendingTime": 0,
                  "latestPingedTime": 0,
                  "latestSuspendedTime": 0,
                  "memoizedInteractions": Set {},
                  "nextExpirationTimeToWorkOn": 0,
                  "nextScheduledRoot": null,
                  "pendingChildren": null,
                  "pendingCommitExpirationTime": 0,
                  "pendingContext": null,
                  "pendingInteractionMap": Map {},
                  "timeoutHandle": -1,
                },
                "tag": 5,
                "treeBaseDuration": 0,
                "type": null,
                "updateQueue": Object {
                  "baseState": null,
                  "firstCapturedEffect": null,
                  "firstCapturedUpdate": null,
                  "firstEffect": null,
                  "firstUpdate": Object {
                    "callback": null,
                    "expirationTime": 1,
                    "next": null,
                    "nextEffect": null,
                    "payload": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={
                          Object {
                            "showPeople": [MockFunction],
                            "showPlanet": [MockFunction],
                            "showVehicle": [MockFunction],
                            "toggleCategoryState": [MockFunction],
                          }
                        }
                      />,
                    },
                    "tag": 0,
                  },
                  "lastCapturedEffect": null,
                  "lastCapturedUpdate": null,
                  "lastEffect": null,
                  "lastUpdate": Object {
                    "callback": null,
                    "expirationTime": 1,
                    "next": null,
                    "nextEffect": null,
                    "payload": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={
                          Object {
                            "showPeople": [MockFunction],
                            "showPlanet": [MockFunction],
                            "showVehicle": [MockFunction],
                            "toggleCategoryState": [MockFunction],
                          }
                        }
                      />,
                    },
                    "tag": 0,
                  },
                },
              },
              "child": [Circular],
              "childExpirationTime": 0,
              "effectTag": 32,
              "expirationTime": 0,
              "firstContextDependency": null,
              "firstEffect": [Circular],
              "index": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": null,
              "memoizedState": Object {
                "element": <WrapperComponent
                  Component={[Function]}
                  context={null}
                  props={
                    Object {
                      "showPeople": [MockFunction],
                      "showPlanet": [MockFunction],
                      "showVehicle": [MockFunction],
                      "toggleCategoryState": [MockFunction],
                    }
                  }
                />,
              },
              "mode": 0,
              "nextEffect": null,
              "pendingProps": null,
              "ref": null,
              "return": null,
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": Object {
                "containerInfo": <div>
                  <div
                    class="button-container"
                  >
                    <button
                      class="cat-button people-button 
		      	cat-button-inactive"
                      name="people"
                    >
                      People
                    </button>
                    <button
                      class="cat-button planets-button 
		      	cat-button-inactive"
                      name="planets"
                    >
                      Planets
                    </button>
                    <button
                      class="cat-button vehicles-button 
		      	cat-button-inactive"
                      name="vehicles"
                    >
                      Vehicles
                    </button>
                    <div
                      class="FavoriteButton"
                    >
                      <button
                        class="cat-button favorites-button"
                      >
                        Favorites
                        <span
                          class="favorites-count"
                        />
                      </button>
                    </div>
                  </div>
                </div>,
                "context": Object {},
                "current": [Circular],
                "didError": false,
                "earliestPendingTime": 0,
                "earliestSuspendedTime": 0,
                "expirationTime": 0,
                "finishedWork": null,
                "firstBatch": null,
                "hydrate": false,
                "interactionThreadID": 12,
                "latestPendingTime": 0,
                "latestPingedTime": 0,
                "latestSuspendedTime": 0,
                "memoizedInteractions": Set {},
                "nextExpirationTimeToWorkOn": 0,
                "nextScheduledRoot": null,
                "pendingChildren": null,
                "pendingCommitExpirationTime": 0,
                "pendingContext": null,
                "pendingInteractionMap": Map {},
                "timeoutHandle": -1,
              },
              "tag": 5,
              "treeBaseDuration": 0,
              "type": null,
              "updateQueue": Object {
                "baseState": Object {
                  "element": <WrapperComponent
                    Component={[Function]}
                    context={null}
                    props={
                      Object {
                        "showPeople": [MockFunction],
                        "showPlanet": [MockFunction],
                        "showVehicle": [MockFunction],
                        "toggleCategoryState": [MockFunction],
                      }
                    }
                  />,
                },
                "firstCapturedEffect": null,
                "firstCapturedUpdate": null,
                "firstEffect": null,
                "firstUpdate": null,
                "lastCapturedEffect": null,
                "lastCapturedUpdate": null,
                "lastEffect": null,
                "lastUpdate": null,
              },
            },
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": WrapperComponent {
              "_reactInternalFiber": [Circular],
              "_reactInternalInstance": Object {},
              "context": Object {},
              "props": Object {
                "Component": [Function],
                "context": null,
                "props": Object {
                  "showPeople": [MockFunction],
                  "showPlanet": [MockFunction],
                  "showVehicle": [MockFunction],
                  "toggleCategoryState": [MockFunction],
                },
              },
              "refs": Object {},
              "state": Object {
                "context": null,
                "mount": true,
                "props": Object {
                  "showPeople": [MockFunction],
                  "showPlanet": [MockFunction],
                  "showVehicle": [MockFunction],
                  "toggleCategoryState": [MockFunction],
                },
              },
              "updater": Object {
                "enqueueForceUpdate": [Function],
                "enqueueReplaceState": [Function],
                "enqueueSetState": [Function],
                "isMounted": [Function],
              },
            },
            "tag": 2,
            "treeBaseDuration": 0,
            "type": [Function],
            "updateQueue": null,
          },
          "selfBaseDuration": 0,
          "sibling": null,
          "stateNode": [Circular],
          "tag": 2,
          "treeBaseDuration": 0,
          "type": [Function],
          "updateQueue": null,
        },
        "_reactInternalInstance": Object {},
        "context": Object {},
        "handlePeopleClick": [Function],
        "handlePlanetClick": [Function],
        "handleVehicleClick": [Function],
        "props": Object {
          "showPeople": [MockFunction],
          "showPlanet": [MockFunction],
          "showVehicle": [MockFunction],
          "toggleCategoryState": [MockFunction],
        },
        "refs": Object {},
        "state": Object {
          "peopleSelected": false,
          "planetsSelected": false,
          "vehiclesSelected": false,
        },
        "updater": Object {
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
        },
      },
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "showPeople": [MockFunction],
        "showPlanet": [MockFunction],
        "showVehicle": [MockFunction],
        "toggleCategoryState": [MockFunction],
      },
      "ref": null,
      "rendered": Object {
        "instance": <div
          class="button-container"
        >
          <button
            class="cat-button people-button 
		      	cat-button-inactive"
            name="people"
          >
            People
          </button>
          <button
            class="cat-button planets-button 
		      	cat-button-inactive"
            name="planets"
          >
            Planets
          </button>
          <button
            class="cat-button vehicles-button 
		      	cat-button-inactive"
            name="vehicles"
          >
            Vehicles
          </button>
          <div
            class="FavoriteButton"
          >
            <button
              class="cat-button favorites-button"
            >
              Favorites
              <span
                class="favorites-count"
              />
            </button>
          </div>
        </div>,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <button
              className="cat-button people-button 
		      	cat-button-inactive"
              name="people"
              onClick={[Function]}
            >
              People
            </button>,
            <button
              className="cat-button planets-button 
		      	cat-button-inactive"
              name="planets"
              onClick={[Function]}
            >
              Planets
            </button>,
            <button
              className="cat-button vehicles-button 
		      	cat-button-inactive"
              name="vehicles"
              onClick={[Function]}
            >
              Vehicles
            </button>,
            <FavoriteButton
              className="FavoriteButton"
            />,
          ],
          "className": "button-container",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": <button
              class="cat-button people-button 
		      	cat-button-inactive"
              name="people"
            >
              People
            </button>,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "People",
              "className": "cat-button people-button 
		      	cat-button-inactive",
              "name": "people",
              "onClick": [Function],
            },
            "ref": null,
            "rendered": Array [
              "People",
            ],
            "type": "button",
          },
          Object {
            "instance": <button
              class="cat-button planets-button 
		      	cat-button-inactive"
              name="planets"
            >
              Planets
            </button>,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Planets",
              "className": "cat-button planets-button 
		      	cat-button-inactive",
              "name": "planets",
              "onClick": [Function],
            },
            "ref": null,
            "rendered": Array [
              "Planets",
            ],
            "type": "button",
          },
          Object {
            "instance": <button
              class="cat-button vehicles-button 
		      	cat-button-inactive"
              name="vehicles"
            >
              Vehicles
            </button>,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Vehicles",
              "className": "cat-button vehicles-button 
		      	cat-button-inactive",
              "name": "vehicles",
              "onClick": [Function],
            },
            "ref": null,
            "rendered": Array [
              "Vehicles",
            ],
            "type": "button",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "className": "FavoriteButton",
              "favoritesCount": undefined,
            },
            "ref": null,
            "rendered": Object {
              "instance": <div
                class="FavoriteButton"
              >
                <button
                  class="cat-button favorites-button"
                >
                  Favorites
                  <span
                    class="favorites-count"
                  />
                </button>
              </div>,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <button
                  className="cat-button favorites-button"
                >
                  Favorites
                  <span
                    className="favorites-count"
                  />
                </button>,
                "className": "FavoriteButton",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": <button
                    class="cat-button favorites-button"
                  >
                    Favorites
                    <span
                      class="favorites-count"
                    />
                  </button>,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": Array [
                      "Favorites",
                      <span
                        className="favorites-count"
                      />,
                    ],
                    "className": "cat-button favorites-button",
                  },
                  "ref": null,
                  "rendered": Array [
                    "Favorites",
                    Object {
                      "instance": <span
                        class="favorites-count"
                      />,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": undefined,
                        "className": "favorites-count",
                      },
                      "ref": null,
                      "rendered": Array [
                        undefined,
                      ],
                      "type": "span",
                    },
                  ],
                  "type": "button",
                },
              ],
              "type": "div",
            },
            "type": [Function],
          },
        ],
        "type": "div",
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
